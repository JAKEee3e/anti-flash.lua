-- Services
local UserInputService = game:GetService("UserInputService")
local StarterGui = game:GetService("StarterGui")
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer

-- Variables
local features = {
    { name = "Anti-Flash", icon = "üõ°Ô∏è" },
    { name = "Skeleton ESP", icon = "üíÄ" },
    { name = "ESP", icon = "üëÅÔ∏è" },
    { name = "Radar", icon = "üéØ" },
    { name = "No-recoil", icon = "üéÆ" },
    { name = "Aimbot", icon = "üéØ" },
    { name = "Aimbot V2", icon = "‚ú®" }
}

local selectedFeatureIndex = 1
local guiVisible = true
local featureStates = {}

-- Theme Colors
local THEME = {
    background = Color3.fromRGB(25, 25, 35),
    accent = Color3.fromRGB(65, 105, 225),
    text = Color3.fromRGB(255, 255, 255),
    secondary = Color3.fromRGB(40, 40, 50),
    enabled = Color3.fromRGB(72, 199, 142),
    disabled = Color3.fromRGB(255, 255, 255),
    hover = Color3.fromRGB(75, 115, 235)
}

-- Initialize feature states
for i = 1, #features do
    featureStates[i] = false
end

-- Create GUI
local screenGui = Instance.new("ScreenGui")
local frame = Instance.new("Frame")
local featureLabels = {}

-- Set GUI properties
screenGui.Name = "FeatureMenu"
screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Create a container for drop shadow
local shadowContainer = Instance.new("Frame")
shadowContainer.Name = "ShadowContainer"
shadowContainer.Size = UDim2.new(0.14, 0, 0.3, 0)
shadowContainer.Position = UDim2.new(0.425, 0, 0.35, 0)
shadowContainer.BackgroundTransparency = 1
shadowContainer.Parent = screenGui

-- Create drop shadow
local shadow = Instance.new("ImageLabel")
shadow.Name = "Shadow"
shadow.AnchorPoint = Vector2.new(0.5, 0.5)
shadow.BackgroundTransparency = 1
shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
shadow.Size = UDim2.new(1, 30, 1, 30)
shadow.Image = "rbxassetid://6014261993"
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.ImageTransparency = 0.5
shadow.Parent = shadowContainer

frame.Name = "MainFrame"
frame.Size = UDim2.new(0.14, 0, 0.3, 0)
frame.Position = UDim2.new(0.425, 0, 0.35, 0)
frame.BackgroundColor3 = THEME.background
frame.BorderSizePixel = 0
frame.ClipsDescendants = true
frame.Parent = screenGui

-- Add corner radius
local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 8)
corner.Parent = frame

-- Create title label with modern design
local titleContainer = Instance.new("Frame")
titleContainer.Size = UDim2.new(1, 0, 0.15, 0)
titleContainer.Position = UDim2.new(0, 0, 0, 0)
titleContainer.BackgroundColor3 = THEME.accent
titleContainer.BorderSizePixel = 0
titleContainer.Parent = frame

local titleCorner = Instance.new("UICorner")
titleCorner.CornerRadius = UDim.new(0, 8)
titleCorner.Parent = titleContainer

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 1, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.TextColor3 = THEME.text
titleLabel.Text = "üéÆ Feature Menu"
titleLabel.TextSize = 18
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Parent = titleContainer

-- Create scrolling container for features
local scrollingFrame = Instance.new("ScrollingFrame")
scrollingFrame.Size = UDim2.new(1, -10, 0.85, -10)
scrollingFrame.Position = UDim2.new(0, 5, 0.15, 5)
scrollingFrame.BackgroundTransparency = 1
scrollingFrame.BorderSizePixel = 0
scrollingFrame.ScrollBarThickness = 4
scrollingFrame.ScrollBarImageColor3 = THEME.accent
scrollingFrame.Parent = frame

-- Create feature buttons
for i, feature in ipairs(features) do
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, -10, 0, 35)
    button.Position = UDim2.new(0, 5, 0, (i-1) * 40)
    button.BackgroundColor3 = THEME.secondary
    button.TextColor3 = THEME.text
    button.Text = feature.icon .. " " .. feature.name
    button.TextSize = 14
    button.Font = Enum.Font.GothamSemibold
    button.Parent = scrollingFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = button
    
    -- Add hover effect
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = THEME.hover
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = THEME.secondary
        }):Play()
    end)
    
    table.insert(featureLabels, button)
end

scrollingFrame.CanvasSize = UDim2.new(0, 0, 0, #features * 40 + 5)

-- Error Handler and Script Loader
local function safeLoadstring(url, featureName)
    local success, result = pcall(function()
        return game:HttpGet(url)
    end)
    
    if success then
        local loadSuccess, loadedScript = pcall(loadstring, result)
        if loadSuccess and loadedScript then
            local runSuccess, errorMsg = pcall(loadedScript)
            if runSuccess then
                StarterGui:SetCore("SendNotification", {
                    Title = "‚úÖ " .. featureName,
                    Text = "Successfully loaded!",
                    Duration = 3
                })
            else
                StarterGui:SetCore("SendNotification", {
                    Title = "‚ùå " .. featureName,
                    Text = "Error running script: " .. tostring(errorMsg),
                    Duration = 3
                })
                warn("Error running " .. featureName .. ": " .. tostring(errorMsg))
            end
        else
            StarterGui:SetCore("SendNotification", {
                Title = "‚ùå " .. featureName,
                Text = "Failed to load script",
                Duration = 3
            })
            warn("Failed to load " .. featureName .. " script")
        end
    else
        StarterGui:SetCore("SendNotification", {
            Title = "‚ùå " .. featureName,
            Text = "Failed to fetch script",
            Duration = 3
        })
        warn("Failed to fetch " .. featureName .. " script: " .. tostring(result))
    end
end

-- Functions
local function updateSelection()
    for i, button in ipairs(featureLabels) do
        local isSelected = i == selectedFeatureIndex
        local isEnabled = featureStates[i]
        
        -- Add arrow indicator for selected item
        button.Text = (isSelected and "‚û°Ô∏è " or "   ") .. features[i].icon .. " " .. features[i].name
        
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = isSelected and THEME.accent or THEME.secondary,
            TextColor3 = isEnabled and THEME.enabled or THEME.disabled
        }):Play()
        
        -- Show status indicator
        if isEnabled then
            button.Text = button.Text .. " ‚úÖ"
        end
    end
end

local function toggleGuiVisibility()
    guiVisible = not guiVisible
    local targetPosition = guiVisible and UDim2.new(0.425, 0, 0.35, 0) or UDim2.new(0.425, 0, -0.5, 0)
    
    TweenService:Create(frame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Position = targetPosition
    }):Play()
    
    TweenService:Create(shadowContainer, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
        Position = targetPosition
    }):Play()
end

-- Instructions Label
local instructionsLabel = Instance.new("TextLabel")
instructionsLabel.Size = UDim2.new(1, 0, 0, 30)
instructionsLabel.Position = UDim2.new(0, 0, 1, 5)
instructionsLabel.BackgroundColor3 = THEME.accent
instructionsLabel.TextColor3 = THEME.text
instructionsLabel.Text = "‚å®Ô∏è ‚Üê/‚Üí or ‚Üë/‚Üì: Select | ‚èé Enter: Toggle | ‚áß RShift: Hide"
instructionsLabel.TextSize = 12
instructionsLabel.Font = Enum.Font.GothamMedium
instructionsLabel.Parent = frame

local instructionsCorner = Instance.new("UICorner")
instructionsCorner.CornerRadius = UDim.new(0, 6)
instructionsCorner.Parent = instructionsLabel

-- Initial update
updateSelection()

-- Welcome message with custom icon
StarterGui:SetCore("SendNotification", {
    Title = "‚ú® Menu Loaded",
    Text = "Use Up/Down to select, Enter to toggle, RShift to hide",
    Duration = 5
})

-- Input Handlers
UserInputService.InputBegan:Connect(function(input)
    if input.KeyCode == Enum.KeyCode.Up or input.KeyCode == Enum.KeyCode.Left then
        selectedFeatureIndex = (selectedFeatureIndex - 2) % #features + 1
        updateSelection()
    elseif input.KeyCode == Enum.KeyCode.Down or input.KeyCode == Enum.KeyCode.Right then
        selectedFeatureIndex = selectedFeatureIndex % #features + 1
        updateSelection()
    elseif input.KeyCode == Enum.KeyCode.Return then
        featureStates[selectedFeatureIndex] = not featureStates[selectedFeatureIndex]
        updateSelection()
        
        -- Execute the appropriate script based on selection
        if selectedFeatureIndex == 1 and featureStates[1] then
            -- Anti-Flash script
            safeLoadstring(
                "https://raw.githubusercontent.com/JAKEee3e/anti-flash.lua/main/anti-flash",
                "Anti-Flash"
            )
        elseif selectedFeatureIndex == 2 and featureStates[2] then
            -- Skeleton ESP script
            safeLoadstring(
                "https://raw.githubusercontent.com/JAKEee3e/anti-flash.lua/main/skeleton-esp",
                "Skeleton ESP"
            )
        elseif selectedFeatureIndex == 3 and featureStates[3] then
            -- ESP script
            safeLoadstring(
                "https://raw.githubusercontent.com/JAKEee3e/anti-flash.lua/main/esP",
                "ESP"
            )
        elseif selectedFeatureIndex == 4 and featureStates[4] then
            -- Radar script
            safeLoadstring(
                "https://raw.githubusercontent.com/JAKEee3e/anti-flash.lua/main/radar",
                "Radar"
            )
        elseif selectedFeatureIndex == 5 and featureStates[5] then
            -- No-recoil script
            safeLoadstring(
                "https://raw.github.com/JAKEee3e/anti-flash.lua/main/No-recoil",
                "No-recoil"
            )
        elseif selectedFeatureIndex == 6 and featureStates[6] then
            -- Aimbot script
            safeLoadstring(
                "https://raw.githubusercontent.com/JAKEee3e/anti-flash.lua/main/Aimbot",
                "Aimbot"
            )
        elseif selectedFeatureIndex == 7 and featureStates[7] then
            -- Aimbot V2 script
            safeLoadstring(
                "https://raw.github.com/JAKEee3e/anti-flash.lua/main/Aimbot%20v2",
                "Aimbot V2"
            )
        end
    elseif input.KeyCode == Enum.KeyCode.RightShift then
        toggleGuiVisibility()
    end
end) 
